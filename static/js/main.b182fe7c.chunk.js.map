{"version":3,"sources":["PokemonType.js","store.js","components/PokemonInfo.jsx","components/PokemonFilter.jsx","components/PokemonRow.jsx","components/PokemonTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["PropTypes","shape","id","string","isRequired","name","english","japanese","chinese","french","type","arrayOf","base","HP","number","Attack","Defense","Speed","useStore","create","set","pokemon","setPokemon","state","filter","setFilter","selectedPokemon","setSelectedPokemon","fetch","then","resp","json","setState","PokemonInfo","Object","keys","map","key","Input","styled","input","PokemonFilter","value","onChange","evt","target","PokemonRow","onClick","join","Button","variant","color","PokemonTable","width","toLocaleLowerCase","includes","slice","index","Title","h1","PageContainer","div","TwoColumnLayout","App","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b182fe7c.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst PokemonType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.shape({\n    english: PropTypes.string.isRequired,\n    japanese: PropTypes.string.isRequired,\n    chinese: PropTypes.string.isRequired,\n    french: PropTypes.string.isRequired,\n  }),\n  type: PropTypes.arrayOf(PropTypes.string.isRequired),\n  base: PropTypes.shape({\n    HP: PropTypes.number.isRequired,\n    Attack: PropTypes.number.isRequired,\n    Defense: PropTypes.number.isRequired,\n    \"Sp. Attack\": PropTypes.number.isRequired,\n    \"Sp. Defense\": PropTypes.number.isRequired,\n    Speed: PropTypes.number.isRequired,\n  }),\n});\n\nexport default PokemonType;\n","import create from \"zustand\";\n\nconst useStore = create((set) => ({\n  pokemon: [],\n  setPokemon: (pokemon) => set((state) => ({ ...state, pokemon })),\n  // we don't need to spread the state in each set thing\n  // set((state) => ({\n  //   ...state,\n  //   pokemon,\n  // })),\n\n  filter: \"\",\n  setFilter: (filter) => set((state) => ({ ...state, filter })),\n\n  selectedPokemon: null,\n  setSelectedPokemon: (selectedPokemon) =>\n    set((state) => ({ ...state, selectedPokemon })),\n}));\n\nfetch(\"/react-github-pages/pokemon.json\")\n  .then((resp) => resp.json())\n  .then((pokemon) => {\n    useStore.setState((state) => ({ ...state, pokemon }));\n  });\n\nexport default useStore;\n","import PokemonType from \"../PokemonType\";\nimport useStore from \"../store\";\n\nconst PokemonInfo = () => {\n  const selectedPokemon = useStore((state) => state.selectedPokemon)\n\n  return selectedPokemon ? (\n    <div>\n      <h1>{selectedPokemon.name.english}</h1>\n      <table>\n        <tbody>\n          {Object.keys(selectedPokemon.base).map((key) => (\n            <tr key={key}>\n              <td>{key}</td>\n              <td>{selectedPokemon.base[key]}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  ) : null;\n};\n\nPokemonInfo.propTypes = PokemonType;\n\nexport default PokemonInfo;\n","import styled from \"@emotion/styled\";\nimport useStore from \"../store\";\n\nconst Input = styled.input`\n  width: 100%;\n  font-size: x-large;\n  padding: 0.2rem;\n`;\n\nconst PokemonFilter = () => {\n  const filter = useStore((state) => state.filter);\n  const setFilter = useStore((state) => state.setFilter);\n\n  return (\n    <Input\n      type=\"text\"\n      value={filter}\n      onChange={(evt) => setFilter(evt.target.value)}\n    />\n  );\n};\n\nexport default PokemonFilter;\n","import PropTypes from \"prop-types\";\nimport { Button } from \"@material-ui/core\";\nimport PokemonType from \"../PokemonType\";\n\nconst PokemonRow = ({ pokemon, onClick }) => (\n  <>\n    <tr key={pokemon.id}>\n      <td>{pokemon.name.english}</td>\n      <td>{pokemon.type.join(\", \")}</td>\n      <td>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => onClick(pokemon)}\n        >\n          More Information\n        </Button>\n      </td>\n    </tr>\n  </>\n);\n\nPokemonRow.propTypes = {\n  pokemon: PropTypes.arrayOf(PokemonType),\n};\n\nexport default PokemonRow;\n","import PokemonRow from \"./PokemonRow\";\nimport useStore from \"../store\";\n\nconst PokemonTable = () => {\n  const pokemon = useStore((state) => state.pokemon);\n  const filter = useStore((state) => state.filter);\n  const setSelectedPokemon = useStore((state) => state.setSelectedPokemon);\n\n  return (\n    <table width=\"100%\">\n      <tbody>\n        {pokemon\n          .filter(({ name: { english } }) =>\n            english.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n          )\n          .slice(0, 20)\n          .map((pokemon, index) => (\n            <PokemonRow\n              key={`${index}-${pokemon}`}\n              pokemon={pokemon}\n              onClick={(pokemon) => setSelectedPokemon(pokemon)}\n            />\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PokemonTable;\n","import \"./App.css\";\nimport styled from \"@emotion/styled\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport PokemonInfo from \"./components/PokemonInfo\";\nimport PokemonFilter from \"./components/PokemonFilter\";\nimport PokemonTable from \"./components/PokemonTable\";\n\nconst Title = styled.h1`\n  text-align: center;\n`;\nconst PageContainer = styled.div`\n  margin: auto;\n  width: 800px;\n  padding-top: 1rem;\n`;\nconst TwoColumnLayout = styled.div`\n  display: grid;\n  grid-template-columns: 70% 30%;\n  grid-column-gap: 1rem;\n`;\n\nfunction App() {\n  return (\n    <PageContainer>\n      <CssBaseline />\n      <Title>Pokemon Search</Title>\n      <TwoColumnLayout>\n        <div>\n          <PokemonFilter />\n          <PokemonTable />\n        </div>\n        <PokemonInfo />\n      </TwoColumnLayout>\n    </PageContainer>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}